{"version":3,"file":"component-loader.factory.js","sourceRoot":"","sources":["../../src/component-loader/component-loader.factory.ts"],"names":[],"mappings":";AAAA,qBAGO,eAAe,CAAC,CAAA;AACvB,uCAAgC,0BAA0B,CAAC,CAAA;AAC3D,4BAAmC,gBAAgB,CAAC,CAAA;AAGpD;IAME,gCAAmB,wBAAkD,EAAE,MAAc,EAClE,QAAkB,EAAE,UAA8B;QACnE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC;IAC5D,CAAC;IAED;;;;;;OAMG;IACI,6CAAY,GAAnB,UAAuB,WAAuB,EAAE,iBAAmC,EAAE,SAAmB;QACtG,MAAM,CAAC,IAAI,wCAAe,CAAI,iBAAiB,EAAE,SAAS,EAAE,WAAW,EACrE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACpF,CAAC;IACI,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,+BAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,aAAM,GAAG;QAChB,EAAC,IAAI,EAAE,eAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,gCAAkB,GAAG;KAC3B,EAL6F,CAK7F,CAAC;IACF,6BAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,8BAAsB,yBAmClC,CAAA","sourcesContent":["import {\n  Injectable, NgZone, ViewContainerRef, ComponentFactoryResolver, Injector,\n  Renderer, ElementRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n\nexport class ComponentLoaderFactory {\n  private _componentFactoryResolver: ComponentFactoryResolver;\n  private _ngZone: NgZone;\n  private _injector: Injector;\n  private _posService: PositioningService;\n\n  public constructor(componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone,\n                     injector: Injector, posService: PositioningService) {\n    this._ngZone = ngZone;\n    this._injector = injector;\n    this._posService = posService;\n    this._componentFactoryResolver = componentFactoryResolver;\n  }\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  public createLoader<T>(_elementRef: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer):ComponentLoader<T> {\n    return new ComponentLoader<T>(_viewContainerRef, _renderer, _elementRef,\n      this._injector, this._componentFactoryResolver, this._ngZone, this._posService);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}